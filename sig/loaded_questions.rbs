module LoadedQuestions
  class Game
    type document = {
      guesser_id: Integer,
      hide_answers: bool,
      question: String,
      status: String,
    }

    def initialize: (::Game game) -> void

    def guesser_id: () -> Integer
    def hide_answers?: () -> bool
    def question: () -> String
    def show_answers?: () -> bool
    def status: () -> Symbol

    private

    attr_reader game: ::Game

    def document: () -> document
  end

  class Player
    type document = {
      active: bool,
      answer: String
    }

    def initialize: (::Player player, game: Game) -> void

    def active?: () -> bool
    def answer: () -> ::NormalizedString
    def guesser?: () -> bool

    private

    attr_reader game: Game
    attr_reader player: ::Player

    def document: () -> document
  end
end
